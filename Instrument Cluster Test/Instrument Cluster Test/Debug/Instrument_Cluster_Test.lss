
Instrument_Cluster_Test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000026  00800100  0000069e  00000732  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000069e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000009  00800126  00800126  00000758  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000758  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000788  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b0  00000000  00000000  000007c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001bab  00000000  00000000  00000878  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000844  00000000  00000000  00002423  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a41  00000000  00000000  00002c67  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000224  00000000  00000000  000036a8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005d5  00000000  00000000  000038cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000118f  00000000  00000000  00003ea1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e8  00000000  00000000  00005030  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 8b 00 	jmp	0x116	; 0x116 <__vector_14>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee e9       	ldi	r30, 0x9E	; 158
  7c:	f6 e0       	ldi	r31, 0x06	; 6
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 32       	cpi	r26, 0x26	; 38
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a6 e2       	ldi	r26, 0x26	; 38
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	af 32       	cpi	r26, 0x2F	; 47
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 1a 02 	call	0x434	; 0x434 <main>
  9e:	0c 94 4d 03 	jmp	0x69a	; 0x69a <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <twi_init>:
		LCD_char(0xFF);
		_delay_ms(30);
	}
	_delay_ms(1000); //Wait a sec before clearing
	LCD_clr();
}
  a6:	e4 e6       	ldi	r30, 0x64	; 100
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	80 81       	ld	r24, Z
  ac:	8f 77       	andi	r24, 0x7F	; 127
  ae:	80 83       	st	Z, r24
  b0:	ec eb       	ldi	r30, 0xBC	; 188
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	80 81       	ld	r24, Z
  b6:	8e 7f       	andi	r24, 0xFE	; 254
  b8:	80 83       	st	Z, r24
  ba:	e9 eb       	ldi	r30, 0xB9	; 185
  bc:	f0 e0       	ldi	r31, 0x00	; 0
  be:	80 81       	ld	r24, Z
  c0:	8e 7f       	andi	r24, 0xFE	; 254
  c2:	80 83       	st	Z, r24
  c4:	88 e4       	ldi	r24, 0x48	; 72
  c6:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__DATA_REGION_ORIGIN__+0x58>
  ca:	08 95       	ret

000000cc <twi_start>:
  cc:	94 ea       	ldi	r25, 0xA4	; 164
  ce:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
  d2:	ec eb       	ldi	r30, 0xBC	; 188
  d4:	f0 e0       	ldi	r31, 0x00	; 0
  d6:	90 81       	ld	r25, Z
  d8:	99 23       	and	r25, r25
  da:	ec f7       	brge	.-6      	; 0xd6 <twi_start+0xa>
  dc:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
  e0:	88 0f       	add	r24, r24
  e2:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
  e6:	84 e8       	ldi	r24, 0x84	; 132
  e8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
  ec:	ec eb       	ldi	r30, 0xBC	; 188
  ee:	f0 e0       	ldi	r31, 0x00	; 0
  f0:	80 81       	ld	r24, Z
  f2:	88 23       	and	r24, r24
  f4:	ec f7       	brge	.-6      	; 0xf0 <twi_start+0x24>
  f6:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
  fa:	08 95       	ret

000000fc <twi_write>:
  fc:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
 100:	84 e8       	ldi	r24, 0x84	; 132
 102:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 106:	ec eb       	ldi	r30, 0xBC	; 188
 108:	f0 e0       	ldi	r31, 0x00	; 0
 10a:	80 81       	ld	r24, Z
 10c:	88 23       	and	r24, r24
 10e:	ec f7       	brge	.-6      	; 0x10a <twi_write+0xe>
 110:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
 114:	08 95       	ret

00000116 <__vector_14>:
 116:	1f 92       	push	r1
 118:	0f 92       	push	r0
 11a:	0f b6       	in	r0, 0x3f	; 63
 11c:	0f 92       	push	r0
 11e:	11 24       	eor	r1, r1
 120:	9f 92       	push	r9
 122:	af 92       	push	r10
 124:	bf 92       	push	r11
 126:	cf 92       	push	r12
 128:	df 92       	push	r13
 12a:	ef 92       	push	r14
 12c:	ff 92       	push	r15
 12e:	0f 93       	push	r16
 130:	1f 93       	push	r17
 132:	2f 93       	push	r18
 134:	3f 93       	push	r19
 136:	4f 93       	push	r20
 138:	5f 93       	push	r21
 13a:	6f 93       	push	r22
 13c:	7f 93       	push	r23
 13e:	8f 93       	push	r24
 140:	9f 93       	push	r25
 142:	af 93       	push	r26
 144:	bf 93       	push	r27
 146:	cf 93       	push	r28
 148:	df 93       	push	r29
 14a:	ef 93       	push	r30
 14c:	ff 93       	push	r31
 14e:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <timerTick>
 152:	90 91 2a 01 	lds	r25, 0x012A	; 0x80012a <timerTick+0x1>
 156:	01 96       	adiw	r24, 0x01	; 1
 158:	90 93 2a 01 	sts	0x012A, r25	; 0x80012a <timerTick+0x1>
 15c:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <timerTick>
 160:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <timerTick>
 164:	90 91 2a 01 	lds	r25, 0x012A	; 0x80012a <timerTick+0x1>
 168:	84 36       	cpi	r24, 0x64	; 100
 16a:	91 05       	cpc	r25, r1
 16c:	0c f4       	brge	.+2      	; 0x170 <__vector_14+0x5a>
 16e:	d5 c0       	rjmp	.+426    	; 0x31a <__vector_14+0x204>
 170:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <timerTick+0x1>
 174:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <timerTick>
 178:	10 92 19 01 	sts	0x0119, r1	; 0x800119 <bitstate+0x1>
 17c:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <bitstate>
 180:	e0 e2       	ldi	r30, 0x20	; 32
 182:	f1 e0       	ldi	r31, 0x01	; 1
 184:	80 e0       	ldi	r24, 0x00	; 0
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	61 e0       	ldi	r22, 0x01	; 1
 18a:	70 e0       	ldi	r23, 0x00	; 0
 18c:	21 91       	ld	r18, Z+
 18e:	31 91       	ld	r19, Z+
 190:	23 2b       	or	r18, r19
 192:	89 f4       	brne	.+34     	; 0x1b6 <__vector_14+0xa0>
 194:	20 91 18 01 	lds	r18, 0x0118	; 0x800118 <bitstate>
 198:	30 91 19 01 	lds	r19, 0x0119	; 0x800119 <bitstate+0x1>
 19c:	ab 01       	movw	r20, r22
 19e:	08 2e       	mov	r0, r24
 1a0:	02 c0       	rjmp	.+4      	; 0x1a6 <__vector_14+0x90>
 1a2:	44 0f       	add	r20, r20
 1a4:	55 1f       	adc	r21, r21
 1a6:	0a 94       	dec	r0
 1a8:	e2 f7       	brpl	.-8      	; 0x1a2 <__vector_14+0x8c>
 1aa:	24 2b       	or	r18, r20
 1ac:	35 2b       	or	r19, r21
 1ae:	30 93 19 01 	sts	0x0119, r19	; 0x800119 <bitstate+0x1>
 1b2:	20 93 18 01 	sts	0x0118, r18	; 0x800118 <bitstate>
 1b6:	01 96       	adiw	r24, 0x01	; 1
 1b8:	83 30       	cpi	r24, 0x03	; 3
 1ba:	91 05       	cpc	r25, r1
 1bc:	39 f7       	brne	.-50     	; 0x18c <__vector_14+0x76>
 1be:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <Duty_Cyles2>
 1c2:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <Duty_Cyles2+0x1>
 1c6:	89 2b       	or	r24, r25
 1c8:	49 f4       	brne	.+18     	; 0x1dc <__vector_14+0xc6>
 1ca:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <bitstate>
 1ce:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <bitstate+0x1>
 1d2:	88 60       	ori	r24, 0x08	; 8
 1d4:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <bitstate+0x1>
 1d8:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <bitstate>
 1dc:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <Duty_Cyles2+0x2>
 1e0:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <Duty_Cyles2+0x3>
 1e4:	89 2b       	or	r24, r25
 1e6:	49 f4       	brne	.+18     	; 0x1fa <__vector_14+0xe4>
 1e8:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <bitstate>
 1ec:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <bitstate+0x1>
 1f0:	80 61       	ori	r24, 0x10	; 16
 1f2:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <bitstate+0x1>
 1f6:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <bitstate>
 1fa:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <Duty_Cyles2+0x4>
 1fe:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <Duty_Cyles2+0x5>
 202:	89 2b       	or	r24, r25
 204:	49 f4       	brne	.+18     	; 0x218 <__vector_14+0x102>
 206:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <bitstate>
 20a:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <bitstate+0x1>
 20e:	80 62       	ori	r24, 0x20	; 32
 210:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <bitstate+0x1>
 214:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <bitstate>
 218:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <LED1Flag>
 21c:	90 91 2e 01 	lds	r25, 0x012E	; 0x80012e <LED1Flag+0x1>
 220:	01 97       	sbiw	r24, 0x01	; 1
 222:	49 f4       	brne	.+18     	; 0x236 <__vector_14+0x120>
 224:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <bitstate>
 228:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <bitstate+0x1>
 22c:	80 64       	ori	r24, 0x40	; 64
 22e:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <bitstate+0x1>
 232:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <bitstate>
 236:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <LED2Flag>
 23a:	90 91 2c 01 	lds	r25, 0x012C	; 0x80012c <LED2Flag+0x1>
 23e:	01 97       	sbiw	r24, 0x01	; 1
 240:	49 f4       	brne	.+18     	; 0x254 <__vector_14+0x13e>
 242:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <bitstate>
 246:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <bitstate+0x1>
 24a:	80 68       	ori	r24, 0x80	; 128
 24c:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <bitstate+0x1>
 250:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <bitstate>
 254:	8b e3       	ldi	r24, 0x3B	; 59
 256:	0e 94 66 00 	call	0xcc	; 0xcc <twi_start>
 25a:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <bitstate>
 25e:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <bitstate+0x1>
 262:	0e 94 7e 00 	call	0xfc	; 0xfc <twi_write>
 266:	84 e9       	ldi	r24, 0x94	; 148
 268:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 26c:	56 c0       	rjmp	.+172    	; 0x31a <__vector_14+0x204>
 26e:	f7 01       	movw	r30, r14
 270:	21 91       	ld	r18, Z+
 272:	31 91       	ld	r19, Z+
 274:	7f 01       	movw	r14, r30
 276:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <timerTick>
 27a:	90 91 2a 01 	lds	r25, 0x012A	; 0x80012a <timerTick+0x1>
 27e:	28 17       	cp	r18, r24
 280:	39 07       	cpc	r19, r25
 282:	e1 f4       	brne	.+56     	; 0x2bc <__vector_14+0x1a6>
 284:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <bitstate>
 288:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <bitstate+0x1>
 28c:	95 01       	movw	r18, r10
 28e:	0c 2e       	mov	r0, r28
 290:	02 c0       	rjmp	.+4      	; 0x296 <__vector_14+0x180>
 292:	22 0f       	add	r18, r18
 294:	33 1f       	adc	r19, r19
 296:	0a 94       	dec	r0
 298:	e2 f7       	brpl	.-8      	; 0x292 <__vector_14+0x17c>
 29a:	82 2b       	or	r24, r18
 29c:	93 2b       	or	r25, r19
 29e:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <bitstate+0x1>
 2a2:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <bitstate>
 2a6:	8b e3       	ldi	r24, 0x3B	; 59
 2a8:	0e 94 66 00 	call	0xcc	; 0xcc <twi_start>
 2ac:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <bitstate>
 2b0:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <bitstate+0x1>
 2b4:	0e 94 7e 00 	call	0xfc	; 0xfc <twi_write>
 2b8:	f6 01       	movw	r30, r12
 2ba:	90 82       	st	Z, r9
 2bc:	f8 01       	movw	r30, r16
 2be:	21 91       	ld	r18, Z+
 2c0:	31 91       	ld	r19, Z+
 2c2:	8f 01       	movw	r16, r30
 2c4:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <timerTick>
 2c8:	90 91 2a 01 	lds	r25, 0x012A	; 0x80012a <timerTick+0x1>
 2cc:	28 17       	cp	r18, r24
 2ce:	39 07       	cpc	r19, r25
 2d0:	f1 f4       	brne	.+60     	; 0x30e <__vector_14+0x1f8>
 2d2:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <bitstate>
 2d6:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <bitstate+0x1>
 2da:	9e 01       	movw	r18, r28
 2dc:	2d 5f       	subi	r18, 0xFD	; 253
 2de:	3f 4f       	sbci	r19, 0xFF	; 255
 2e0:	a5 01       	movw	r20, r10
 2e2:	02 c0       	rjmp	.+4      	; 0x2e8 <__vector_14+0x1d2>
 2e4:	44 0f       	add	r20, r20
 2e6:	55 1f       	adc	r21, r21
 2e8:	2a 95       	dec	r18
 2ea:	e2 f7       	brpl	.-8      	; 0x2e4 <__vector_14+0x1ce>
 2ec:	84 2b       	or	r24, r20
 2ee:	95 2b       	or	r25, r21
 2f0:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <bitstate+0x1>
 2f4:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <bitstate>
 2f8:	8b e3       	ldi	r24, 0x3B	; 59
 2fa:	0e 94 66 00 	call	0xcc	; 0xcc <twi_start>
 2fe:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <bitstate>
 302:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <bitstate+0x1>
 306:	0e 94 7e 00 	call	0xfc	; 0xfc <twi_write>
 30a:	f6 01       	movw	r30, r12
 30c:	90 82       	st	Z, r9
 30e:	21 96       	adiw	r28, 0x01	; 1
 310:	c3 30       	cpi	r28, 0x03	; 3
 312:	d1 05       	cpc	r29, r1
 314:	09 f0       	breq	.+2      	; 0x318 <__vector_14+0x202>
 316:	ab cf       	rjmp	.-170    	; 0x26e <__vector_14+0x158>
 318:	17 c0       	rjmp	.+46     	; 0x348 <__vector_14+0x232>
 31a:	0f 2e       	mov	r0, r31
 31c:	f0 e2       	ldi	r31, 0x20	; 32
 31e:	ef 2e       	mov	r14, r31
 320:	f1 e0       	ldi	r31, 0x01	; 1
 322:	ff 2e       	mov	r15, r31
 324:	f0 2d       	mov	r31, r0
 326:	0a e1       	ldi	r16, 0x1A	; 26
 328:	11 e0       	ldi	r17, 0x01	; 1
 32a:	c0 e0       	ldi	r28, 0x00	; 0
 32c:	d0 e0       	ldi	r29, 0x00	; 0
 32e:	aa 24       	eor	r10, r10
 330:	a3 94       	inc	r10
 332:	b1 2c       	mov	r11, r1
 334:	0f 2e       	mov	r0, r31
 336:	fc eb       	ldi	r31, 0xBC	; 188
 338:	cf 2e       	mov	r12, r31
 33a:	d1 2c       	mov	r13, r1
 33c:	f0 2d       	mov	r31, r0
 33e:	0f 2e       	mov	r0, r31
 340:	f4 e9       	ldi	r31, 0x94	; 148
 342:	9f 2e       	mov	r9, r31
 344:	f0 2d       	mov	r31, r0
 346:	93 cf       	rjmp	.-218    	; 0x26e <__vector_14+0x158>
 348:	ff 91       	pop	r31
 34a:	ef 91       	pop	r30
 34c:	df 91       	pop	r29
 34e:	cf 91       	pop	r28
 350:	bf 91       	pop	r27
 352:	af 91       	pop	r26
 354:	9f 91       	pop	r25
 356:	8f 91       	pop	r24
 358:	7f 91       	pop	r23
 35a:	6f 91       	pop	r22
 35c:	5f 91       	pop	r21
 35e:	4f 91       	pop	r20
 360:	3f 91       	pop	r19
 362:	2f 91       	pop	r18
 364:	1f 91       	pop	r17
 366:	0f 91       	pop	r16
 368:	ff 90       	pop	r15
 36a:	ef 90       	pop	r14
 36c:	df 90       	pop	r13
 36e:	cf 90       	pop	r12
 370:	bf 90       	pop	r11
 372:	af 90       	pop	r10
 374:	9f 90       	pop	r9
 376:	0f 90       	pop	r0
 378:	0f be       	out	0x3f, r0	; 63
 37a:	0f 90       	pop	r0
 37c:	1f 90       	pop	r1
 37e:	18 95       	reti

00000380 <timer_Init>:
 380:	f8 94       	cli
 382:	14 bc       	out	0x24, r1	; 36
 384:	15 bc       	out	0x25, r1	; 37
 386:	16 bc       	out	0x26, r1	; 38
 388:	89 ef       	ldi	r24, 0xF9	; 249
 38a:	87 bd       	out	0x27, r24	; 39
 38c:	85 b5       	in	r24, 0x25	; 37
 38e:	82 60       	ori	r24, 0x02	; 2
 390:	85 bd       	out	0x25, r24	; 37
 392:	85 b5       	in	r24, 0x25	; 37
 394:	82 60       	ori	r24, 0x02	; 2
 396:	85 bd       	out	0x25, r24	; 37
 398:	ee e6       	ldi	r30, 0x6E	; 110
 39a:	f0 e0       	ldi	r31, 0x00	; 0
 39c:	80 81       	ld	r24, Z
 39e:	82 60       	ori	r24, 0x02	; 2
 3a0:	80 83       	st	Z, r24
 3a2:	78 94       	sei
 3a4:	08 95       	ret

000003a6 <rgb_set>:
 3a6:	00 97       	sbiw	r24, 0x00	; 0
 3a8:	19 f0       	breq	.+6      	; 0x3b0 <rgb_set+0xa>
 3aa:	01 97       	sbiw	r24, 0x01	; 1
 3ac:	a1 f0       	breq	.+40     	; 0x3d6 <rgb_set+0x30>
 3ae:	08 95       	ret
 3b0:	e0 e2       	ldi	r30, 0x20	; 32
 3b2:	f1 e0       	ldi	r31, 0x01	; 1
 3b4:	db 01       	movw	r26, r22
 3b6:	8c 91       	ld	r24, X
 3b8:	90 e0       	ldi	r25, 0x00	; 0
 3ba:	91 83       	std	Z+1, r25	; 0x01
 3bc:	80 83       	st	Z, r24
 3be:	11 96       	adiw	r26, 0x01	; 1
 3c0:	8c 91       	ld	r24, X
 3c2:	11 97       	sbiw	r26, 0x01	; 1
 3c4:	90 e0       	ldi	r25, 0x00	; 0
 3c6:	93 83       	std	Z+3, r25	; 0x03
 3c8:	82 83       	std	Z+2, r24	; 0x02
 3ca:	12 96       	adiw	r26, 0x02	; 2
 3cc:	8c 91       	ld	r24, X
 3ce:	90 e0       	ldi	r25, 0x00	; 0
 3d0:	95 83       	std	Z+5, r25	; 0x05
 3d2:	84 83       	std	Z+4, r24	; 0x04
 3d4:	08 95       	ret
 3d6:	ea e1       	ldi	r30, 0x1A	; 26
 3d8:	f1 e0       	ldi	r31, 0x01	; 1
 3da:	db 01       	movw	r26, r22
 3dc:	8c 91       	ld	r24, X
 3de:	90 e0       	ldi	r25, 0x00	; 0
 3e0:	91 83       	std	Z+1, r25	; 0x01
 3e2:	80 83       	st	Z, r24
 3e4:	11 96       	adiw	r26, 0x01	; 1
 3e6:	8c 91       	ld	r24, X
 3e8:	11 97       	sbiw	r26, 0x01	; 1
 3ea:	90 e0       	ldi	r25, 0x00	; 0
 3ec:	93 83       	std	Z+3, r25	; 0x03
 3ee:	82 83       	std	Z+2, r24	; 0x02
 3f0:	12 96       	adiw	r26, 0x02	; 2
 3f2:	8c 91       	ld	r24, X
 3f4:	90 e0       	ldi	r25, 0x00	; 0
 3f6:	95 83       	std	Z+5, r25	; 0x05
 3f8:	84 83       	std	Z+4, r24	; 0x04
 3fa:	08 95       	ret

000003fc <rpm_write>:
 3fc:	0f 93       	push	r16
 3fe:	1f 93       	push	r17
 400:	cf 93       	push	r28
 402:	df 93       	push	r29
 404:	c8 2f       	mov	r28, r24
 406:	09 2f       	mov	r16, r25
 408:	8a e3       	ldi	r24, 0x3A	; 58
 40a:	0e 94 66 00 	call	0xcc	; 0xcc <twi_start>
 40e:	8c 2f       	mov	r24, r28
 410:	0e 94 7e 00 	call	0xfc	; 0xfc <twi_write>
 414:	cc eb       	ldi	r28, 0xBC	; 188
 416:	d0 e0       	ldi	r29, 0x00	; 0
 418:	14 e9       	ldi	r17, 0x94	; 148
 41a:	18 83       	st	Y, r17
 41c:	89 e3       	ldi	r24, 0x39	; 57
 41e:	0e 94 66 00 	call	0xcc	; 0xcc <twi_start>
 422:	80 2f       	mov	r24, r16
 424:	0e 94 7e 00 	call	0xfc	; 0xfc <twi_write>
 428:	18 83       	st	Y, r17
 42a:	df 91       	pop	r29
 42c:	cf 91       	pop	r28
 42e:	1f 91       	pop	r17
 430:	0f 91       	pop	r16
 432:	08 95       	ret

00000434 <main>:
LCD_D6 = (1<<D6), //(1<<6)
LCD_D7 = (1<<D7); //(1<<7)

int main(void)
{
	twi_init();
 434:	0e 94 53 00 	call	0xa6	; 0xa6 <twi_init>
	timer_Init();
 438:	0e 94 c0 01 	call	0x380	; 0x380 <timer_Init>
    /* Replace with your application code */
    while (1) 
    {
	//test RPM Bar
	
	rpm_write(0b1111111111111111); //clear bar
 43c:	8f ef       	ldi	r24, 0xFF	; 255
 43e:	9f ef       	ldi	r25, 0xFF	; 255
 440:	0e 94 fe 01 	call	0x3fc	; 0x3fc <rpm_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 444:	2f e7       	ldi	r18, 0x7F	; 127
 446:	84 e8       	ldi	r24, 0x84	; 132
 448:	9e e1       	ldi	r25, 0x1E	; 30
 44a:	21 50       	subi	r18, 0x01	; 1
 44c:	80 40       	sbci	r24, 0x00	; 0
 44e:	90 40       	sbci	r25, 0x00	; 0
 450:	e1 f7       	brne	.-8      	; 0x44a <main+0x16>
 452:	00 c0       	rjmp	.+0      	; 0x454 <main+0x20>
 454:	00 00       	nop
	_delay_ms(500);
	rpm_write(0b1111111100000000); //turn on right
 456:	80 e0       	ldi	r24, 0x00	; 0
 458:	9f ef       	ldi	r25, 0xFF	; 255
 45a:	0e 94 fe 01 	call	0x3fc	; 0x3fc <rpm_write>
 45e:	2f e7       	ldi	r18, 0x7F	; 127
 460:	84 e8       	ldi	r24, 0x84	; 132
 462:	9e e1       	ldi	r25, 0x1E	; 30
 464:	21 50       	subi	r18, 0x01	; 1
 466:	80 40       	sbci	r24, 0x00	; 0
 468:	90 40       	sbci	r25, 0x00	; 0
 46a:	e1 f7       	brne	.-8      	; 0x464 <main+0x30>
 46c:	00 c0       	rjmp	.+0      	; 0x46e <main+0x3a>
 46e:	00 00       	nop
	_delay_ms(500);
	rpm_write(0b0000000011111111); //turn on left
 470:	8f ef       	ldi	r24, 0xFF	; 255
 472:	90 e0       	ldi	r25, 0x00	; 0
 474:	0e 94 fe 01 	call	0x3fc	; 0x3fc <rpm_write>
 478:	2f e7       	ldi	r18, 0x7F	; 127
 47a:	84 e8       	ldi	r24, 0x84	; 132
 47c:	9e e1       	ldi	r25, 0x1E	; 30
 47e:	21 50       	subi	r18, 0x01	; 1
 480:	80 40       	sbci	r24, 0x00	; 0
 482:	90 40       	sbci	r25, 0x00	; 0
 484:	e1 f7       	brne	.-8      	; 0x47e <main+0x4a>
 486:	00 c0       	rjmp	.+0      	; 0x488 <main+0x54>
 488:	00 00       	nop
	_delay_ms(500);
	rpm_write(0b0000000000000000); //turn on all
 48a:	80 e0       	ldi	r24, 0x00	; 0
 48c:	90 e0       	ldi	r25, 0x00	; 0
 48e:	0e 94 fe 01 	call	0x3fc	; 0x3fc <rpm_write>
 492:	2f e7       	ldi	r18, 0x7F	; 127
 494:	84 e8       	ldi	r24, 0x84	; 132
 496:	9e e1       	ldi	r25, 0x1E	; 30
 498:	21 50       	subi	r18, 0x01	; 1
 49a:	80 40       	sbci	r24, 0x00	; 0
 49c:	90 40       	sbci	r25, 0x00	; 0
 49e:	e1 f7       	brne	.-8      	; 0x498 <main+0x64>
 4a0:	00 c0       	rjmp	.+0      	; 0x4a2 <main+0x6e>
 4a2:	00 00       	nop
	_delay_ms(500);
	rpm_write(0b1111111111111111); //clear bar
 4a4:	8f ef       	ldi	r24, 0xFF	; 255
 4a6:	9f ef       	ldi	r25, 0xFF	; 255
 4a8:	0e 94 fe 01 	call	0x3fc	; 0x3fc <rpm_write>
 4ac:	2f e7       	ldi	r18, 0x7F	; 127
 4ae:	84 e8       	ldi	r24, 0x84	; 132
 4b0:	9e e1       	ldi	r25, 0x1E	; 30
 4b2:	21 50       	subi	r18, 0x01	; 1
 4b4:	80 40       	sbci	r24, 0x00	; 0
 4b6:	90 40       	sbci	r25, 0x00	; 0
 4b8:	e1 f7       	brne	.-8      	; 0x4b2 <main+0x7e>
 4ba:	00 c0       	rjmp	.+0      	; 0x4bc <main+0x88>
 4bc:	00 00       	nop
	_delay_ms(500);

	rgb_set(0, ORANGE);
 4be:	62 e1       	ldi	r22, 0x12	; 18
 4c0:	71 e0       	ldi	r23, 0x01	; 1
 4c2:	80 e0       	ldi	r24, 0x00	; 0
 4c4:	90 e0       	ldi	r25, 0x00	; 0
 4c6:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <rgb_set>
	rgb_set(1, BLACK);
 4ca:	66 e2       	ldi	r22, 0x26	; 38
 4cc:	71 e0       	ldi	r23, 0x01	; 1
 4ce:	81 e0       	ldi	r24, 0x01	; 1
 4d0:	90 e0       	ldi	r25, 0x00	; 0
 4d2:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <rgb_set>
 4d6:	2f e7       	ldi	r18, 0x7F	; 127
 4d8:	8f e4       	ldi	r24, 0x4F	; 79
 4da:	92 e1       	ldi	r25, 0x12	; 18
 4dc:	21 50       	subi	r18, 0x01	; 1
 4de:	80 40       	sbci	r24, 0x00	; 0
 4e0:	90 40       	sbci	r25, 0x00	; 0
 4e2:	e1 f7       	brne	.-8      	; 0x4dc <main+0xa8>
 4e4:	00 c0       	rjmp	.+0      	; 0x4e6 <main+0xb2>
 4e6:	00 00       	nop
	_delay_ms(300);
	rgb_set(0, PINK);
 4e8:	60 e0       	ldi	r22, 0x00	; 0
 4ea:	71 e0       	ldi	r23, 0x01	; 1
 4ec:	80 e0       	ldi	r24, 0x00	; 0
 4ee:	90 e0       	ldi	r25, 0x00	; 0
 4f0:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <rgb_set>
	rgb_set(1, VIOLET);
 4f4:	6c e0       	ldi	r22, 0x0C	; 12
 4f6:	71 e0       	ldi	r23, 0x01	; 1
 4f8:	81 e0       	ldi	r24, 0x01	; 1
 4fa:	90 e0       	ldi	r25, 0x00	; 0
 4fc:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <rgb_set>
 500:	2f e7       	ldi	r18, 0x7F	; 127
 502:	8f e4       	ldi	r24, 0x4F	; 79
 504:	92 e1       	ldi	r25, 0x12	; 18
 506:	21 50       	subi	r18, 0x01	; 1
 508:	80 40       	sbci	r24, 0x00	; 0
 50a:	90 40       	sbci	r25, 0x00	; 0
 50c:	e1 f7       	brne	.-8      	; 0x506 <main+0xd2>
 50e:	00 c0       	rjmp	.+0      	; 0x510 <main+0xdc>
 510:	00 00       	nop
	_delay_ms(300);
	rgb_set(0, WHITE);
 512:	63 e0       	ldi	r22, 0x03	; 3
 514:	71 e0       	ldi	r23, 0x01	; 1
 516:	80 e0       	ldi	r24, 0x00	; 0
 518:	90 e0       	ldi	r25, 0x00	; 0
 51a:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <rgb_set>
	rgb_set(1, ORANGE);
 51e:	62 e1       	ldi	r22, 0x12	; 18
 520:	71 e0       	ldi	r23, 0x01	; 1
 522:	81 e0       	ldi	r24, 0x01	; 1
 524:	90 e0       	ldi	r25, 0x00	; 0
 526:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <rgb_set>
 52a:	2f e7       	ldi	r18, 0x7F	; 127
 52c:	8f e4       	ldi	r24, 0x4F	; 79
 52e:	92 e1       	ldi	r25, 0x12	; 18
 530:	21 50       	subi	r18, 0x01	; 1
 532:	80 40       	sbci	r24, 0x00	; 0
 534:	90 40       	sbci	r25, 0x00	; 0
 536:	e1 f7       	brne	.-8      	; 0x530 <main+0xfc>
 538:	00 c0       	rjmp	.+0      	; 0x53a <main+0x106>
 53a:	00 00       	nop
	_delay_ms(300);
	rgb_set(0, GREEN);
 53c:	6f e0       	ldi	r22, 0x0F	; 15
 53e:	71 e0       	ldi	r23, 0x01	; 1
 540:	80 e0       	ldi	r24, 0x00	; 0
 542:	90 e0       	ldi	r25, 0x00	; 0
 544:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <rgb_set>
	rgb_set(1, RED);
 548:	65 e1       	ldi	r22, 0x15	; 21
 54a:	71 e0       	ldi	r23, 0x01	; 1
 54c:	81 e0       	ldi	r24, 0x01	; 1
 54e:	90 e0       	ldi	r25, 0x00	; 0
 550:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <rgb_set>
 554:	2f e7       	ldi	r18, 0x7F	; 127
 556:	8f e4       	ldi	r24, 0x4F	; 79
 558:	92 e1       	ldi	r25, 0x12	; 18
 55a:	21 50       	subi	r18, 0x01	; 1
 55c:	80 40       	sbci	r24, 0x00	; 0
 55e:	90 40       	sbci	r25, 0x00	; 0
 560:	e1 f7       	brne	.-8      	; 0x55a <main+0x126>
 562:	00 c0       	rjmp	.+0      	; 0x564 <main+0x130>
 564:	00 00       	nop
void indicatorSet(int LED_ID, int status)
{
	switch (LED_ID)
	{
		case LED1:
		LED1Flag = status;
 566:	c1 e0       	ldi	r28, 0x01	; 1
 568:	d0 e0       	ldi	r29, 0x00	; 0
 56a:	d0 93 2e 01 	sts	0x012E, r29	; 0x80012e <LED1Flag+0x1>
 56e:	c0 93 2d 01 	sts	0x012D, r28	; 0x80012d <LED1Flag>
		break;
		
		case LED2:
		LED2Flag = status;
 572:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <LED2Flag+0x1>
 576:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <LED2Flag>
	_delay_ms(300);
	indicatorSet(LED1, 1); //TURN OFF BLUE LED #1 NOTE THAT 1 = OFF. 0 = ON
	indicatorSet(LED2, 0); //TURN OFF BLUE LED #1 NOTE THAT 1 = OFF. 0 = ON
	rgb_set(0, MAGENTA);
 57a:	66 e0       	ldi	r22, 0x06	; 6
 57c:	71 e0       	ldi	r23, 0x01	; 1
 57e:	80 e0       	ldi	r24, 0x00	; 0
 580:	90 e0       	ldi	r25, 0x00	; 0
 582:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <rgb_set>
	rgb_set(1, CYAN);
 586:	69 e0       	ldi	r22, 0x09	; 9
 588:	71 e0       	ldi	r23, 0x01	; 1
 58a:	81 e0       	ldi	r24, 0x01	; 1
 58c:	90 e0       	ldi	r25, 0x00	; 0
 58e:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <rgb_set>
 592:	2f e7       	ldi	r18, 0x7F	; 127
 594:	8f e4       	ldi	r24, 0x4F	; 79
 596:	92 e1       	ldi	r25, 0x12	; 18
 598:	21 50       	subi	r18, 0x01	; 1
 59a:	80 40       	sbci	r24, 0x00	; 0
 59c:	90 40       	sbci	r25, 0x00	; 0
 59e:	e1 f7       	brne	.-8      	; 0x598 <main+0x164>
 5a0:	00 c0       	rjmp	.+0      	; 0x5a2 <main+0x16e>
 5a2:	00 00       	nop
	_delay_ms(300);
	rgb_set(0, CYAN);
 5a4:	69 e0       	ldi	r22, 0x09	; 9
 5a6:	71 e0       	ldi	r23, 0x01	; 1
 5a8:	80 e0       	ldi	r24, 0x00	; 0
 5aa:	90 e0       	ldi	r25, 0x00	; 0
 5ac:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <rgb_set>
	rgb_set(1, MAGENTA);
 5b0:	66 e0       	ldi	r22, 0x06	; 6
 5b2:	71 e0       	ldi	r23, 0x01	; 1
 5b4:	81 e0       	ldi	r24, 0x01	; 1
 5b6:	90 e0       	ldi	r25, 0x00	; 0
 5b8:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <rgb_set>
 5bc:	2f e7       	ldi	r18, 0x7F	; 127
 5be:	8f e4       	ldi	r24, 0x4F	; 79
 5c0:	92 e1       	ldi	r25, 0x12	; 18
 5c2:	21 50       	subi	r18, 0x01	; 1
 5c4:	80 40       	sbci	r24, 0x00	; 0
 5c6:	90 40       	sbci	r25, 0x00	; 0
 5c8:	e1 f7       	brne	.-8      	; 0x5c2 <main+0x18e>
 5ca:	00 c0       	rjmp	.+0      	; 0x5cc <main+0x198>
 5cc:	00 00       	nop
	_delay_ms(300);
	rgb_set(0, RED);
 5ce:	65 e1       	ldi	r22, 0x15	; 21
 5d0:	71 e0       	ldi	r23, 0x01	; 1
 5d2:	80 e0       	ldi	r24, 0x00	; 0
 5d4:	90 e0       	ldi	r25, 0x00	; 0
 5d6:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <rgb_set>
	rgb_set(1, GREEN);
 5da:	6f e0       	ldi	r22, 0x0F	; 15
 5dc:	71 e0       	ldi	r23, 0x01	; 1
 5de:	81 e0       	ldi	r24, 0x01	; 1
 5e0:	90 e0       	ldi	r25, 0x00	; 0
 5e2:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <rgb_set>
 5e6:	2f e7       	ldi	r18, 0x7F	; 127
 5e8:	8f e4       	ldi	r24, 0x4F	; 79
 5ea:	92 e1       	ldi	r25, 0x12	; 18
 5ec:	21 50       	subi	r18, 0x01	; 1
 5ee:	80 40       	sbci	r24, 0x00	; 0
 5f0:	90 40       	sbci	r25, 0x00	; 0
 5f2:	e1 f7       	brne	.-8      	; 0x5ec <main+0x1b8>
 5f4:	00 c0       	rjmp	.+0      	; 0x5f6 <main+0x1c2>
 5f6:	00 00       	nop
	_delay_ms(300);
	rgb_set(0, ORANGE);
 5f8:	62 e1       	ldi	r22, 0x12	; 18
 5fa:	71 e0       	ldi	r23, 0x01	; 1
 5fc:	80 e0       	ldi	r24, 0x00	; 0
 5fe:	90 e0       	ldi	r25, 0x00	; 0
 600:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <rgb_set>
	rgb_set(1, VIOLET);
 604:	6c e0       	ldi	r22, 0x0C	; 12
 606:	71 e0       	ldi	r23, 0x01	; 1
 608:	81 e0       	ldi	r24, 0x01	; 1
 60a:	90 e0       	ldi	r25, 0x00	; 0
 60c:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <rgb_set>
 610:	2f e7       	ldi	r18, 0x7F	; 127
 612:	8f e4       	ldi	r24, 0x4F	; 79
 614:	92 e1       	ldi	r25, 0x12	; 18
 616:	21 50       	subi	r18, 0x01	; 1
 618:	80 40       	sbci	r24, 0x00	; 0
 61a:	90 40       	sbci	r25, 0x00	; 0
 61c:	e1 f7       	brne	.-8      	; 0x616 <main+0x1e2>
 61e:	00 c0       	rjmp	.+0      	; 0x620 <main+0x1ec>
 620:	00 00       	nop
	_delay_ms(300);
	rgb_set(0, VIOLET);
 622:	6c e0       	ldi	r22, 0x0C	; 12
 624:	71 e0       	ldi	r23, 0x01	; 1
 626:	80 e0       	ldi	r24, 0x00	; 0
 628:	90 e0       	ldi	r25, 0x00	; 0
 62a:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <rgb_set>
	rgb_set(1, WHITE);
 62e:	63 e0       	ldi	r22, 0x03	; 3
 630:	71 e0       	ldi	r23, 0x01	; 1
 632:	81 e0       	ldi	r24, 0x01	; 1
 634:	90 e0       	ldi	r25, 0x00	; 0
 636:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <rgb_set>
 63a:	2f e7       	ldi	r18, 0x7F	; 127
 63c:	8f e4       	ldi	r24, 0x4F	; 79
 63e:	92 e1       	ldi	r25, 0x12	; 18
 640:	21 50       	subi	r18, 0x01	; 1
 642:	80 40       	sbci	r24, 0x00	; 0
 644:	90 40       	sbci	r25, 0x00	; 0
 646:	e1 f7       	brne	.-8      	; 0x640 <main+0x20c>
 648:	00 c0       	rjmp	.+0      	; 0x64a <main+0x216>
 64a:	00 00       	nop
	_delay_ms(300);
	rgb_set(0, BLACK);
 64c:	66 e2       	ldi	r22, 0x26	; 38
 64e:	71 e0       	ldi	r23, 0x01	; 1
 650:	80 e0       	ldi	r24, 0x00	; 0
 652:	90 e0       	ldi	r25, 0x00	; 0
 654:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <rgb_set>
	rgb_set(1, ORANGE);
 658:	62 e1       	ldi	r22, 0x12	; 18
 65a:	71 e0       	ldi	r23, 0x01	; 1
 65c:	81 e0       	ldi	r24, 0x01	; 1
 65e:	90 e0       	ldi	r25, 0x00	; 0
 660:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <rgb_set>
 664:	2f e7       	ldi	r18, 0x7F	; 127
 666:	8f e4       	ldi	r24, 0x4F	; 79
 668:	92 e1       	ldi	r25, 0x12	; 18
 66a:	21 50       	subi	r18, 0x01	; 1
 66c:	80 40       	sbci	r24, 0x00	; 0
 66e:	90 40       	sbci	r25, 0x00	; 0
 670:	e1 f7       	brne	.-8      	; 0x66a <main+0x236>
 672:	00 c0       	rjmp	.+0      	; 0x674 <main+0x240>
 674:	00 00       	nop
void indicatorSet(int LED_ID, int status)
{
	switch (LED_ID)
	{
		case LED1:
		LED1Flag = status;
 676:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <LED1Flag+0x1>
 67a:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <LED1Flag>
		break;
		
		case LED2:
		LED2Flag = status;
 67e:	d0 93 2c 01 	sts	0x012C, r29	; 0x80012c <LED2Flag+0x1>
 682:	c0 93 2b 01 	sts	0x012B, r28	; 0x80012b <LED2Flag>
 686:	2f e7       	ldi	r18, 0x7F	; 127
 688:	8f e4       	ldi	r24, 0x4F	; 79
 68a:	92 e1       	ldi	r25, 0x12	; 18
 68c:	21 50       	subi	r18, 0x01	; 1
 68e:	80 40       	sbci	r24, 0x00	; 0
 690:	90 40       	sbci	r25, 0x00	; 0
 692:	e1 f7       	brne	.-8      	; 0x68c <main+0x258>
 694:	00 c0       	rjmp	.+0      	; 0x696 <main+0x262>
 696:	00 00       	nop
 698:	d1 ce       	rjmp	.-606    	; 0x43c <main+0x8>

0000069a <_exit>:
 69a:	f8 94       	cli

0000069c <__stop_program>:
 69c:	ff cf       	rjmp	.-2      	; 0x69c <__stop_program>
