
Instrument_Cluster_Test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000026  00800100  0000072e  000007c2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000072e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000015  00800126  00800126  000007e8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000007e8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000818  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b0  00000000  00000000  00000858  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001d01  00000000  00000000  00000908  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000864  00000000  00000000  00002609  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a3e  00000000  00000000  00002e6d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000210  00000000  00000000  000038ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005e4  00000000  00000000  00003abc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000128b  00000000  00000000  000040a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000130  00000000  00000000  0000532b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 8b 00 	jmp	0x116	; 0x116 <__vector_14>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee e2       	ldi	r30, 0x2E	; 46
  7c:	f7 e0       	ldi	r31, 0x07	; 7
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 32       	cpi	r26, 0x26	; 38
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a6 e2       	ldi	r26, 0x26	; 38
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ab 33       	cpi	r26, 0x3B	; 59
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 1d 02 	call	0x43a	; 0x43a <main>
  9e:	0c 94 95 03 	jmp	0x72a	; 0x72a <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <twi_init>:
		LCD_char(0xFF);
		_delay_ms(30);
	}
	_delay_ms(1000); //Wait a sec before clearing
	LCD_clr();
}
  a6:	e4 e6       	ldi	r30, 0x64	; 100
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	80 81       	ld	r24, Z
  ac:	8f 77       	andi	r24, 0x7F	; 127
  ae:	80 83       	st	Z, r24
  b0:	ec eb       	ldi	r30, 0xBC	; 188
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	80 81       	ld	r24, Z
  b6:	8e 7f       	andi	r24, 0xFE	; 254
  b8:	80 83       	st	Z, r24
  ba:	e9 eb       	ldi	r30, 0xB9	; 185
  bc:	f0 e0       	ldi	r31, 0x00	; 0
  be:	80 81       	ld	r24, Z
  c0:	8e 7f       	andi	r24, 0xFE	; 254
  c2:	80 83       	st	Z, r24
  c4:	88 e4       	ldi	r24, 0x48	; 72
  c6:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__DATA_REGION_ORIGIN__+0x58>
  ca:	08 95       	ret

000000cc <twi_start>:
  cc:	94 ea       	ldi	r25, 0xA4	; 164
  ce:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
  d2:	ec eb       	ldi	r30, 0xBC	; 188
  d4:	f0 e0       	ldi	r31, 0x00	; 0
  d6:	90 81       	ld	r25, Z
  d8:	99 23       	and	r25, r25
  da:	ec f7       	brge	.-6      	; 0xd6 <twi_start+0xa>
  dc:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
  e0:	88 0f       	add	r24, r24
  e2:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
  e6:	84 e8       	ldi	r24, 0x84	; 132
  e8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
  ec:	ec eb       	ldi	r30, 0xBC	; 188
  ee:	f0 e0       	ldi	r31, 0x00	; 0
  f0:	80 81       	ld	r24, Z
  f2:	88 23       	and	r24, r24
  f4:	ec f7       	brge	.-6      	; 0xf0 <twi_start+0x24>
  f6:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
  fa:	08 95       	ret

000000fc <twi_write>:
  fc:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
 100:	84 e8       	ldi	r24, 0x84	; 132
 102:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 106:	ec eb       	ldi	r30, 0xBC	; 188
 108:	f0 e0       	ldi	r31, 0x00	; 0
 10a:	80 81       	ld	r24, Z
 10c:	88 23       	and	r24, r24
 10e:	ec f7       	brge	.-6      	; 0x10a <twi_write+0xe>
 110:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
 114:	08 95       	ret

00000116 <__vector_14>:
 116:	1f 92       	push	r1
 118:	0f 92       	push	r0
 11a:	0f b6       	in	r0, 0x3f	; 63
 11c:	0f 92       	push	r0
 11e:	11 24       	eor	r1, r1
 120:	9f 92       	push	r9
 122:	af 92       	push	r10
 124:	bf 92       	push	r11
 126:	cf 92       	push	r12
 128:	df 92       	push	r13
 12a:	ef 92       	push	r14
 12c:	ff 92       	push	r15
 12e:	0f 93       	push	r16
 130:	1f 93       	push	r17
 132:	2f 93       	push	r18
 134:	3f 93       	push	r19
 136:	4f 93       	push	r20
 138:	5f 93       	push	r21
 13a:	6f 93       	push	r22
 13c:	7f 93       	push	r23
 13e:	8f 93       	push	r24
 140:	9f 93       	push	r25
 142:	af 93       	push	r26
 144:	bf 93       	push	r27
 146:	cf 93       	push	r28
 148:	df 93       	push	r29
 14a:	ef 93       	push	r30
 14c:	ff 93       	push	r31
 14e:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <__data_end>
 152:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <__data_end+0x1>
 156:	01 97       	sbiw	r24, 0x01	; 1
 158:	c9 f4       	brne	.+50     	; 0x18c <__vector_14+0x76>
 15a:	00 91 38 01 	lds	r16, 0x0138	; 0x800138 <LED_status>
 15e:	c0 91 39 01 	lds	r28, 0x0139	; 0x800139 <LED_status+0x1>
 162:	8a e3       	ldi	r24, 0x3A	; 58
 164:	0e 94 66 00 	call	0xcc	; 0xcc <twi_start>
 168:	8c 2f       	mov	r24, r28
 16a:	0e 94 7e 00 	call	0xfc	; 0xfc <twi_write>
 16e:	cc eb       	ldi	r28, 0xBC	; 188
 170:	d0 e0       	ldi	r29, 0x00	; 0
 172:	14 e9       	ldi	r17, 0x94	; 148
 174:	18 83       	st	Y, r17
 176:	89 e3       	ldi	r24, 0x39	; 57
 178:	0e 94 66 00 	call	0xcc	; 0xcc <twi_start>
 17c:	80 2f       	mov	r24, r16
 17e:	0e 94 7e 00 	call	0xfc	; 0xfc <twi_write>
 182:	18 83       	st	Y, r17
 184:	10 92 27 01 	sts	0x0127, r1	; 0x800127 <__data_end+0x1>
 188:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <__data_end>
 18c:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <timerTick>
 190:	90 91 2c 01 	lds	r25, 0x012C	; 0x80012c <timerTick+0x1>
 194:	01 96       	adiw	r24, 0x01	; 1
 196:	90 93 2c 01 	sts	0x012C, r25	; 0x80012c <timerTick+0x1>
 19a:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <timerTick>
 19e:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <timerTick>
 1a2:	90 91 2c 01 	lds	r25, 0x012C	; 0x80012c <timerTick+0x1>
 1a6:	84 36       	cpi	r24, 0x64	; 100
 1a8:	91 05       	cpc	r25, r1
 1aa:	0c f4       	brge	.+2      	; 0x1ae <__vector_14+0x98>
 1ac:	d5 c0       	rjmp	.+426    	; 0x358 <__vector_14+0x242>
 1ae:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <timerTick+0x1>
 1b2:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <timerTick>
 1b6:	10 92 19 01 	sts	0x0119, r1	; 0x800119 <bitstate+0x1>
 1ba:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <bitstate>
 1be:	e0 e2       	ldi	r30, 0x20	; 32
 1c0:	f1 e0       	ldi	r31, 0x01	; 1
 1c2:	80 e0       	ldi	r24, 0x00	; 0
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	61 e0       	ldi	r22, 0x01	; 1
 1c8:	70 e0       	ldi	r23, 0x00	; 0
 1ca:	21 91       	ld	r18, Z+
 1cc:	31 91       	ld	r19, Z+
 1ce:	23 2b       	or	r18, r19
 1d0:	89 f4       	brne	.+34     	; 0x1f4 <__vector_14+0xde>
 1d2:	20 91 18 01 	lds	r18, 0x0118	; 0x800118 <bitstate>
 1d6:	30 91 19 01 	lds	r19, 0x0119	; 0x800119 <bitstate+0x1>
 1da:	ab 01       	movw	r20, r22
 1dc:	08 2e       	mov	r0, r24
 1de:	02 c0       	rjmp	.+4      	; 0x1e4 <__vector_14+0xce>
 1e0:	44 0f       	add	r20, r20
 1e2:	55 1f       	adc	r21, r21
 1e4:	0a 94       	dec	r0
 1e6:	e2 f7       	brpl	.-8      	; 0x1e0 <__vector_14+0xca>
 1e8:	24 2b       	or	r18, r20
 1ea:	35 2b       	or	r19, r21
 1ec:	30 93 19 01 	sts	0x0119, r19	; 0x800119 <bitstate+0x1>
 1f0:	20 93 18 01 	sts	0x0118, r18	; 0x800118 <bitstate>
 1f4:	01 96       	adiw	r24, 0x01	; 1
 1f6:	83 30       	cpi	r24, 0x03	; 3
 1f8:	91 05       	cpc	r25, r1
 1fa:	39 f7       	brne	.-50     	; 0x1ca <__vector_14+0xb4>
 1fc:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <Duty_Cyles2>
 200:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <Duty_Cyles2+0x1>
 204:	89 2b       	or	r24, r25
 206:	49 f4       	brne	.+18     	; 0x21a <__vector_14+0x104>
 208:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <bitstate>
 20c:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <bitstate+0x1>
 210:	88 60       	ori	r24, 0x08	; 8
 212:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <bitstate+0x1>
 216:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <bitstate>
 21a:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <Duty_Cyles2+0x2>
 21e:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <Duty_Cyles2+0x3>
 222:	89 2b       	or	r24, r25
 224:	49 f4       	brne	.+18     	; 0x238 <__vector_14+0x122>
 226:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <bitstate>
 22a:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <bitstate+0x1>
 22e:	80 61       	ori	r24, 0x10	; 16
 230:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <bitstate+0x1>
 234:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <bitstate>
 238:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <Duty_Cyles2+0x4>
 23c:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <Duty_Cyles2+0x5>
 240:	89 2b       	or	r24, r25
 242:	49 f4       	brne	.+18     	; 0x256 <__vector_14+0x140>
 244:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <bitstate>
 248:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <bitstate+0x1>
 24c:	80 62       	ori	r24, 0x20	; 32
 24e:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <bitstate+0x1>
 252:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <bitstate>
 256:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <LED1Flag>
 25a:	90 91 30 01 	lds	r25, 0x0130	; 0x800130 <LED1Flag+0x1>
 25e:	01 97       	sbiw	r24, 0x01	; 1
 260:	49 f4       	brne	.+18     	; 0x274 <__vector_14+0x15e>
 262:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <bitstate>
 266:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <bitstate+0x1>
 26a:	80 64       	ori	r24, 0x40	; 64
 26c:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <bitstate+0x1>
 270:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <bitstate>
 274:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <LED2Flag>
 278:	90 91 2e 01 	lds	r25, 0x012E	; 0x80012e <LED2Flag+0x1>
 27c:	01 97       	sbiw	r24, 0x01	; 1
 27e:	49 f4       	brne	.+18     	; 0x292 <__vector_14+0x17c>
 280:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <bitstate>
 284:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <bitstate+0x1>
 288:	80 68       	ori	r24, 0x80	; 128
 28a:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <bitstate+0x1>
 28e:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <bitstate>
 292:	8b e3       	ldi	r24, 0x3B	; 59
 294:	0e 94 66 00 	call	0xcc	; 0xcc <twi_start>
 298:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <bitstate>
 29c:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <bitstate+0x1>
 2a0:	0e 94 7e 00 	call	0xfc	; 0xfc <twi_write>
 2a4:	84 e9       	ldi	r24, 0x94	; 148
 2a6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 2aa:	56 c0       	rjmp	.+172    	; 0x358 <__vector_14+0x242>
 2ac:	f7 01       	movw	r30, r14
 2ae:	21 91       	ld	r18, Z+
 2b0:	31 91       	ld	r19, Z+
 2b2:	7f 01       	movw	r14, r30
 2b4:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <timerTick>
 2b8:	90 91 2c 01 	lds	r25, 0x012C	; 0x80012c <timerTick+0x1>
 2bc:	28 17       	cp	r18, r24
 2be:	39 07       	cpc	r19, r25
 2c0:	e1 f4       	brne	.+56     	; 0x2fa <__vector_14+0x1e4>
 2c2:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <bitstate>
 2c6:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <bitstate+0x1>
 2ca:	95 01       	movw	r18, r10
 2cc:	0c 2e       	mov	r0, r28
 2ce:	02 c0       	rjmp	.+4      	; 0x2d4 <__vector_14+0x1be>
 2d0:	22 0f       	add	r18, r18
 2d2:	33 1f       	adc	r19, r19
 2d4:	0a 94       	dec	r0
 2d6:	e2 f7       	brpl	.-8      	; 0x2d0 <__vector_14+0x1ba>
 2d8:	82 2b       	or	r24, r18
 2da:	93 2b       	or	r25, r19
 2dc:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <bitstate+0x1>
 2e0:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <bitstate>
 2e4:	8b e3       	ldi	r24, 0x3B	; 59
 2e6:	0e 94 66 00 	call	0xcc	; 0xcc <twi_start>
 2ea:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <bitstate>
 2ee:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <bitstate+0x1>
 2f2:	0e 94 7e 00 	call	0xfc	; 0xfc <twi_write>
 2f6:	f6 01       	movw	r30, r12
 2f8:	90 82       	st	Z, r9
 2fa:	f8 01       	movw	r30, r16
 2fc:	21 91       	ld	r18, Z+
 2fe:	31 91       	ld	r19, Z+
 300:	8f 01       	movw	r16, r30
 302:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <timerTick>
 306:	90 91 2c 01 	lds	r25, 0x012C	; 0x80012c <timerTick+0x1>
 30a:	28 17       	cp	r18, r24
 30c:	39 07       	cpc	r19, r25
 30e:	f1 f4       	brne	.+60     	; 0x34c <__vector_14+0x236>
 310:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <bitstate>
 314:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <bitstate+0x1>
 318:	9e 01       	movw	r18, r28
 31a:	2d 5f       	subi	r18, 0xFD	; 253
 31c:	3f 4f       	sbci	r19, 0xFF	; 255
 31e:	a5 01       	movw	r20, r10
 320:	02 c0       	rjmp	.+4      	; 0x326 <__vector_14+0x210>
 322:	44 0f       	add	r20, r20
 324:	55 1f       	adc	r21, r21
 326:	2a 95       	dec	r18
 328:	e2 f7       	brpl	.-8      	; 0x322 <__vector_14+0x20c>
 32a:	84 2b       	or	r24, r20
 32c:	95 2b       	or	r25, r21
 32e:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <bitstate+0x1>
 332:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <bitstate>
 336:	8b e3       	ldi	r24, 0x3B	; 59
 338:	0e 94 66 00 	call	0xcc	; 0xcc <twi_start>
 33c:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <bitstate>
 340:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <bitstate+0x1>
 344:	0e 94 7e 00 	call	0xfc	; 0xfc <twi_write>
 348:	f6 01       	movw	r30, r12
 34a:	90 82       	st	Z, r9
 34c:	21 96       	adiw	r28, 0x01	; 1
 34e:	c3 30       	cpi	r28, 0x03	; 3
 350:	d1 05       	cpc	r29, r1
 352:	09 f0       	breq	.+2      	; 0x356 <__vector_14+0x240>
 354:	ab cf       	rjmp	.-170    	; 0x2ac <__vector_14+0x196>
 356:	17 c0       	rjmp	.+46     	; 0x386 <__vector_14+0x270>
 358:	0f 2e       	mov	r0, r31
 35a:	f0 e2       	ldi	r31, 0x20	; 32
 35c:	ef 2e       	mov	r14, r31
 35e:	f1 e0       	ldi	r31, 0x01	; 1
 360:	ff 2e       	mov	r15, r31
 362:	f0 2d       	mov	r31, r0
 364:	0a e1       	ldi	r16, 0x1A	; 26
 366:	11 e0       	ldi	r17, 0x01	; 1
 368:	c0 e0       	ldi	r28, 0x00	; 0
 36a:	d0 e0       	ldi	r29, 0x00	; 0
 36c:	aa 24       	eor	r10, r10
 36e:	a3 94       	inc	r10
 370:	b1 2c       	mov	r11, r1
 372:	0f 2e       	mov	r0, r31
 374:	fc eb       	ldi	r31, 0xBC	; 188
 376:	cf 2e       	mov	r12, r31
 378:	d1 2c       	mov	r13, r1
 37a:	f0 2d       	mov	r31, r0
 37c:	0f 2e       	mov	r0, r31
 37e:	f4 e9       	ldi	r31, 0x94	; 148
 380:	9f 2e       	mov	r9, r31
 382:	f0 2d       	mov	r31, r0
 384:	93 cf       	rjmp	.-218    	; 0x2ac <__vector_14+0x196>
 386:	ff 91       	pop	r31
 388:	ef 91       	pop	r30
 38a:	df 91       	pop	r29
 38c:	cf 91       	pop	r28
 38e:	bf 91       	pop	r27
 390:	af 91       	pop	r26
 392:	9f 91       	pop	r25
 394:	8f 91       	pop	r24
 396:	7f 91       	pop	r23
 398:	6f 91       	pop	r22
 39a:	5f 91       	pop	r21
 39c:	4f 91       	pop	r20
 39e:	3f 91       	pop	r19
 3a0:	2f 91       	pop	r18
 3a2:	1f 91       	pop	r17
 3a4:	0f 91       	pop	r16
 3a6:	ff 90       	pop	r15
 3a8:	ef 90       	pop	r14
 3aa:	df 90       	pop	r13
 3ac:	cf 90       	pop	r12
 3ae:	bf 90       	pop	r11
 3b0:	af 90       	pop	r10
 3b2:	9f 90       	pop	r9
 3b4:	0f 90       	pop	r0
 3b6:	0f be       	out	0x3f, r0	; 63
 3b8:	0f 90       	pop	r0
 3ba:	1f 90       	pop	r1
 3bc:	18 95       	reti

000003be <timer_Init>:
 3be:	f8 94       	cli
 3c0:	14 bc       	out	0x24, r1	; 36
 3c2:	15 bc       	out	0x25, r1	; 37
 3c4:	16 bc       	out	0x26, r1	; 38
 3c6:	89 ef       	ldi	r24, 0xF9	; 249
 3c8:	87 bd       	out	0x27, r24	; 39
 3ca:	85 b5       	in	r24, 0x25	; 37
 3cc:	82 60       	ori	r24, 0x02	; 2
 3ce:	85 bd       	out	0x25, r24	; 37
 3d0:	85 b5       	in	r24, 0x25	; 37
 3d2:	82 60       	ori	r24, 0x02	; 2
 3d4:	85 bd       	out	0x25, r24	; 37
 3d6:	ee e6       	ldi	r30, 0x6E	; 110
 3d8:	f0 e0       	ldi	r31, 0x00	; 0
 3da:	80 81       	ld	r24, Z
 3dc:	82 60       	ori	r24, 0x02	; 2
 3de:	80 83       	st	Z, r24
 3e0:	78 94       	sei
 3e2:	08 95       	ret

000003e4 <rgb_set>:
 3e4:	00 97       	sbiw	r24, 0x00	; 0
 3e6:	19 f0       	breq	.+6      	; 0x3ee <rgb_set+0xa>
 3e8:	01 97       	sbiw	r24, 0x01	; 1
 3ea:	a1 f0       	breq	.+40     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 3ec:	08 95       	ret
 3ee:	e0 e2       	ldi	r30, 0x20	; 32
 3f0:	f1 e0       	ldi	r31, 0x01	; 1
 3f2:	db 01       	movw	r26, r22
 3f4:	8c 91       	ld	r24, X
 3f6:	90 e0       	ldi	r25, 0x00	; 0
 3f8:	91 83       	std	Z+1, r25	; 0x01
 3fa:	80 83       	st	Z, r24
 3fc:	11 96       	adiw	r26, 0x01	; 1
 3fe:	8c 91       	ld	r24, X
 400:	11 97       	sbiw	r26, 0x01	; 1
 402:	90 e0       	ldi	r25, 0x00	; 0
 404:	93 83       	std	Z+3, r25	; 0x03
 406:	82 83       	std	Z+2, r24	; 0x02
 408:	12 96       	adiw	r26, 0x02	; 2
 40a:	8c 91       	ld	r24, X
 40c:	90 e0       	ldi	r25, 0x00	; 0
 40e:	95 83       	std	Z+5, r25	; 0x05
 410:	84 83       	std	Z+4, r24	; 0x04
 412:	08 95       	ret
 414:	ea e1       	ldi	r30, 0x1A	; 26
 416:	f1 e0       	ldi	r31, 0x01	; 1
 418:	db 01       	movw	r26, r22
 41a:	8c 91       	ld	r24, X
 41c:	90 e0       	ldi	r25, 0x00	; 0
 41e:	91 83       	std	Z+1, r25	; 0x01
 420:	80 83       	st	Z, r24
 422:	11 96       	adiw	r26, 0x01	; 1
 424:	8c 91       	ld	r24, X
 426:	11 97       	sbiw	r26, 0x01	; 1
 428:	90 e0       	ldi	r25, 0x00	; 0
 42a:	93 83       	std	Z+3, r25	; 0x03
 42c:	82 83       	std	Z+2, r24	; 0x02
 42e:	12 96       	adiw	r26, 0x02	; 2
 430:	8c 91       	ld	r24, X
 432:	90 e0       	ldi	r25, 0x00	; 0
 434:	95 83       	std	Z+5, r25	; 0x05
 436:	84 83       	std	Z+4, r24	; 0x04
 438:	08 95       	ret

0000043a <main>:
LCD_D6 = (1<<D6), //(1<<6)
LCD_D7 = (1<<D7); //(1<<7)

int main(void)
{
	twi_init();
 43a:	0e 94 53 00 	call	0xa6	; 0xa6 <twi_init>
	timer_Init();
 43e:	0e 94 df 01 	call	0x3be	; 0x3be <timer_Init>
//RPM LED SECTION////////////////////////////////////////////////////////

void rpm_write(uint16_t LED_PATTERN)
{
	//0 = off; 1 = on
	 LED_status = LED_PATTERN;
 442:	ee 24       	eor	r14, r14
 444:	ea 94       	dec	r14
 446:	f1 2c       	mov	r15, r1
	 rpm_update =1;
 448:	c1 e0       	ldi	r28, 0x01	; 1
 44a:	d0 e0       	ldi	r29, 0x00	; 0
//RPM LED SECTION////////////////////////////////////////////////////////

void rpm_write(uint16_t LED_PATTERN)
{
	//0 = off; 1 = on
	 LED_status = LED_PATTERN;
 44c:	00 e0       	ldi	r16, 0x00	; 0
 44e:	1f ef       	ldi	r17, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 450:	2f e7       	ldi	r18, 0x7F	; 127
 452:	4f e4       	ldi	r20, 0x4F	; 79
 454:	52 e1       	ldi	r21, 0x12	; 18
 456:	21 50       	subi	r18, 0x01	; 1
 458:	40 40       	sbci	r20, 0x00	; 0
 45a:	50 40       	sbci	r21, 0x00	; 0
 45c:	e1 f7       	brne	.-8      	; 0x456 <main+0x1c>
 45e:	00 c0       	rjmp	.+0      	; 0x460 <main+0x26>
 460:	00 00       	nop
 462:	f0 92 39 01 	sts	0x0139, r15	; 0x800139 <LED_status+0x1>
 466:	e0 92 38 01 	sts	0x0138, r14	; 0x800138 <LED_status>
	 rpm_update =1;
 46a:	d0 93 27 01 	sts	0x0127, r29	; 0x800127 <__data_end+0x1>
 46e:	c0 93 26 01 	sts	0x0126, r28	; 0x800126 <__data_end>
 472:	6f e7       	ldi	r22, 0x7F	; 127
 474:	8f e4       	ldi	r24, 0x4F	; 79
 476:	92 e1       	ldi	r25, 0x12	; 18
 478:	61 50       	subi	r22, 0x01	; 1
 47a:	80 40       	sbci	r24, 0x00	; 0
 47c:	90 40       	sbci	r25, 0x00	; 0
 47e:	e1 f7       	brne	.-8      	; 0x478 <main+0x3e>
 480:	00 c0       	rjmp	.+0      	; 0x482 <main+0x48>
 482:	00 00       	nop
//RPM LED SECTION////////////////////////////////////////////////////////

void rpm_write(uint16_t LED_PATTERN)
{
	//0 = off; 1 = on
	 LED_status = LED_PATTERN;
 484:	10 93 39 01 	sts	0x0139, r17	; 0x800139 <LED_status+0x1>
 488:	00 93 38 01 	sts	0x0138, r16	; 0x800138 <LED_status>
	 rpm_update =1;
 48c:	d0 93 27 01 	sts	0x0127, r29	; 0x800127 <__data_end+0x1>
 490:	c0 93 26 01 	sts	0x0126, r28	; 0x800126 <__data_end>
 494:	2f e7       	ldi	r18, 0x7F	; 127
 496:	4f e4       	ldi	r20, 0x4F	; 79
 498:	52 e1       	ldi	r21, 0x12	; 18
 49a:	21 50       	subi	r18, 0x01	; 1
 49c:	40 40       	sbci	r20, 0x00	; 0
 49e:	50 40       	sbci	r21, 0x00	; 0
 4a0:	e1 f7       	brne	.-8      	; 0x49a <main+0x60>
 4a2:	00 c0       	rjmp	.+0      	; 0x4a4 <main+0x6a>
 4a4:	00 00       	nop
	rpm_write(0b1111111100000000);
	_delay_ms(300);

	uint16_t status = 0b1111111111111111;
	
	for(int i = 0; i < 16; i++) {
 4a6:	20 e0       	ldi	r18, 0x00	; 0
 4a8:	30 e0       	ldi	r19, 0x00	; 0
	rpm_write(0b0000000011111111);
	_delay_ms(300);
	rpm_write(0b1111111100000000);
	_delay_ms(300);

	uint16_t status = 0b1111111111111111;
 4aa:	8f ef       	ldi	r24, 0xFF	; 255
 4ac:	9f ef       	ldi	r25, 0xFF	; 255
	
	for(int i = 0; i < 16; i++) {
		status &= ~(1<<i);
 4ae:	ae 01       	movw	r20, r28
 4b0:	02 2e       	mov	r0, r18
 4b2:	02 c0       	rjmp	.+4      	; 0x4b8 <main+0x7e>
 4b4:	44 0f       	add	r20, r20
 4b6:	55 1f       	adc	r21, r21
 4b8:	0a 94       	dec	r0
 4ba:	e2 f7       	brpl	.-8      	; 0x4b4 <main+0x7a>
 4bc:	40 95       	com	r20
 4be:	50 95       	com	r21
 4c0:	84 23       	and	r24, r20
 4c2:	95 23       	and	r25, r21
//RPM LED SECTION////////////////////////////////////////////////////////

void rpm_write(uint16_t LED_PATTERN)
{
	//0 = off; 1 = on
	 LED_status = LED_PATTERN;
 4c4:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <LED_status+0x1>
 4c8:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <LED_status>
	 rpm_update =1;
 4cc:	d0 93 27 01 	sts	0x0127, r29	; 0x800127 <__data_end+0x1>
 4d0:	c0 93 26 01 	sts	0x0126, r28	; 0x800126 <__data_end>
 4d4:	6f e7       	ldi	r22, 0x7F	; 127
 4d6:	4a e1       	ldi	r20, 0x1A	; 26
 4d8:	56 e0       	ldi	r21, 0x06	; 6
 4da:	61 50       	subi	r22, 0x01	; 1
 4dc:	40 40       	sbci	r20, 0x00	; 0
 4de:	50 40       	sbci	r21, 0x00	; 0
 4e0:	e1 f7       	brne	.-8      	; 0x4da <main+0xa0>
 4e2:	00 c0       	rjmp	.+0      	; 0x4e4 <main+0xaa>
 4e4:	00 00       	nop
	rpm_write(0b1111111100000000);
	_delay_ms(300);

	uint16_t status = 0b1111111111111111;
	
	for(int i = 0; i < 16; i++) {
 4e6:	2f 5f       	subi	r18, 0xFF	; 255
 4e8:	3f 4f       	sbci	r19, 0xFF	; 255
 4ea:	20 31       	cpi	r18, 0x10	; 16
 4ec:	31 05       	cpc	r19, r1
 4ee:	f9 f6       	brne	.-66     	; 0x4ae <main+0x74>
 4f0:	20 e1       	ldi	r18, 0x10	; 16
 4f2:	30 e0       	ldi	r19, 0x00	; 0
		_delay_ms(100);

	}
	
	for(int i = 16; i >= 0; i--) {
		status |= (1<<i);
 4f4:	ae 01       	movw	r20, r28
 4f6:	02 2e       	mov	r0, r18
 4f8:	02 c0       	rjmp	.+4      	; 0x4fe <main+0xc4>
 4fa:	44 0f       	add	r20, r20
 4fc:	55 1f       	adc	r21, r21
 4fe:	0a 94       	dec	r0
 500:	e2 f7       	brpl	.-8      	; 0x4fa <main+0xc0>
 502:	84 2b       	or	r24, r20
 504:	95 2b       	or	r25, r21
//RPM LED SECTION////////////////////////////////////////////////////////

void rpm_write(uint16_t LED_PATTERN)
{
	//0 = off; 1 = on
	 LED_status = LED_PATTERN;
 506:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <LED_status+0x1>
 50a:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <LED_status>
	 rpm_update =1;
 50e:	d0 93 27 01 	sts	0x0127, r29	; 0x800127 <__data_end+0x1>
 512:	c0 93 26 01 	sts	0x0126, r28	; 0x800126 <__data_end>
 516:	6f e7       	ldi	r22, 0x7F	; 127
 518:	4a e1       	ldi	r20, 0x1A	; 26
 51a:	56 e0       	ldi	r21, 0x06	; 6
 51c:	61 50       	subi	r22, 0x01	; 1
 51e:	40 40       	sbci	r20, 0x00	; 0
 520:	50 40       	sbci	r21, 0x00	; 0
 522:	e1 f7       	brne	.-8      	; 0x51c <main+0xe2>
 524:	00 c0       	rjmp	.+0      	; 0x526 <main+0xec>
 526:	00 00       	nop
		rpm_write(status);
		_delay_ms(100);

	}
	
	for(int i = 16; i >= 0; i--) {
 528:	21 50       	subi	r18, 0x01	; 1
 52a:	31 09       	sbc	r19, r1
 52c:	18 f7       	brcc	.-58     	; 0x4f4 <main+0xba>
		_delay_ms(100);

	}

	//test RGB and blue indicators 
	rgb_set(0, ORANGE);
 52e:	62 e1       	ldi	r22, 0x12	; 18
 530:	71 e0       	ldi	r23, 0x01	; 1
 532:	80 e0       	ldi	r24, 0x00	; 0
 534:	90 e0       	ldi	r25, 0x00	; 0
 536:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <rgb_set>
	rgb_set(1, BLACK);
 53a:	68 e2       	ldi	r22, 0x28	; 40
 53c:	71 e0       	ldi	r23, 0x01	; 1
 53e:	ce 01       	movw	r24, r28
 540:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <rgb_set>
 544:	8f e7       	ldi	r24, 0x7F	; 127
 546:	9f e4       	ldi	r25, 0x4F	; 79
 548:	22 e1       	ldi	r18, 0x12	; 18
 54a:	81 50       	subi	r24, 0x01	; 1
 54c:	90 40       	sbci	r25, 0x00	; 0
 54e:	20 40       	sbci	r18, 0x00	; 0
 550:	e1 f7       	brne	.-8      	; 0x54a <main+0x110>
 552:	00 c0       	rjmp	.+0      	; 0x554 <main+0x11a>
 554:	00 00       	nop
	_delay_ms(300);
	rgb_set(0, PINK);
 556:	60 e0       	ldi	r22, 0x00	; 0
 558:	71 e0       	ldi	r23, 0x01	; 1
 55a:	80 e0       	ldi	r24, 0x00	; 0
 55c:	90 e0       	ldi	r25, 0x00	; 0
 55e:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <rgb_set>
	rgb_set(1, VIOLET);
 562:	6c e0       	ldi	r22, 0x0C	; 12
 564:	71 e0       	ldi	r23, 0x01	; 1
 566:	ce 01       	movw	r24, r28
 568:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <rgb_set>
 56c:	4f e7       	ldi	r20, 0x7F	; 127
 56e:	5f e4       	ldi	r21, 0x4F	; 79
 570:	62 e1       	ldi	r22, 0x12	; 18
 572:	41 50       	subi	r20, 0x01	; 1
 574:	50 40       	sbci	r21, 0x00	; 0
 576:	60 40       	sbci	r22, 0x00	; 0
 578:	e1 f7       	brne	.-8      	; 0x572 <main+0x138>
 57a:	00 c0       	rjmp	.+0      	; 0x57c <main+0x142>
 57c:	00 00       	nop
	_delay_ms(300);
	rgb_set(0, WHITE);
 57e:	63 e0       	ldi	r22, 0x03	; 3
 580:	71 e0       	ldi	r23, 0x01	; 1
 582:	80 e0       	ldi	r24, 0x00	; 0
 584:	90 e0       	ldi	r25, 0x00	; 0
 586:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <rgb_set>
	rgb_set(1, ORANGE);
 58a:	62 e1       	ldi	r22, 0x12	; 18
 58c:	71 e0       	ldi	r23, 0x01	; 1
 58e:	ce 01       	movw	r24, r28
 590:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <rgb_set>
 594:	8f e7       	ldi	r24, 0x7F	; 127
 596:	9f e4       	ldi	r25, 0x4F	; 79
 598:	22 e1       	ldi	r18, 0x12	; 18
 59a:	81 50       	subi	r24, 0x01	; 1
 59c:	90 40       	sbci	r25, 0x00	; 0
 59e:	20 40       	sbci	r18, 0x00	; 0
 5a0:	e1 f7       	brne	.-8      	; 0x59a <main+0x160>
 5a2:	00 c0       	rjmp	.+0      	; 0x5a4 <main+0x16a>
 5a4:	00 00       	nop
	_delay_ms(300);
	rgb_set(0, GREEN);
 5a6:	6f e0       	ldi	r22, 0x0F	; 15
 5a8:	71 e0       	ldi	r23, 0x01	; 1
 5aa:	80 e0       	ldi	r24, 0x00	; 0
 5ac:	90 e0       	ldi	r25, 0x00	; 0
 5ae:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <rgb_set>
	rgb_set(1, RED);
 5b2:	65 e1       	ldi	r22, 0x15	; 21
 5b4:	71 e0       	ldi	r23, 0x01	; 1
 5b6:	ce 01       	movw	r24, r28
 5b8:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <rgb_set>
 5bc:	4f e7       	ldi	r20, 0x7F	; 127
 5be:	5f e4       	ldi	r21, 0x4F	; 79
 5c0:	62 e1       	ldi	r22, 0x12	; 18
 5c2:	41 50       	subi	r20, 0x01	; 1
 5c4:	50 40       	sbci	r21, 0x00	; 0
 5c6:	60 40       	sbci	r22, 0x00	; 0
 5c8:	e1 f7       	brne	.-8      	; 0x5c2 <main+0x188>
 5ca:	00 c0       	rjmp	.+0      	; 0x5cc <main+0x192>
 5cc:	00 00       	nop
{
	//1 = off; 0 = on
	switch (LED_ID)
	{
		case LED1:
		LED1Flag = status;
 5ce:	d0 93 30 01 	sts	0x0130, r29	; 0x800130 <LED1Flag+0x1>
 5d2:	c0 93 2f 01 	sts	0x012F, r28	; 0x80012f <LED1Flag>
		break;
		
		case LED2:
		LED2Flag = status;
 5d6:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <LED2Flag+0x1>
 5da:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <LED2Flag>
	_delay_ms(300);
	indicatorSet(LED1, 1); //TURN OFF BLUE LED #1 NOTE THAT 1 = OFF. 0 = ON
	indicatorSet(LED2, 0); //TURN OFF BLUE LED #1 NOTE THAT 1 = OFF. 0 = ON
	rgb_set(0, MAGENTA);
 5de:	66 e0       	ldi	r22, 0x06	; 6
 5e0:	71 e0       	ldi	r23, 0x01	; 1
 5e2:	80 e0       	ldi	r24, 0x00	; 0
 5e4:	90 e0       	ldi	r25, 0x00	; 0
 5e6:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <rgb_set>
	rgb_set(1, CYAN);
 5ea:	69 e0       	ldi	r22, 0x09	; 9
 5ec:	71 e0       	ldi	r23, 0x01	; 1
 5ee:	ce 01       	movw	r24, r28
 5f0:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <rgb_set>
 5f4:	8f e7       	ldi	r24, 0x7F	; 127
 5f6:	9f e4       	ldi	r25, 0x4F	; 79
 5f8:	22 e1       	ldi	r18, 0x12	; 18
 5fa:	81 50       	subi	r24, 0x01	; 1
 5fc:	90 40       	sbci	r25, 0x00	; 0
 5fe:	20 40       	sbci	r18, 0x00	; 0
 600:	e1 f7       	brne	.-8      	; 0x5fa <main+0x1c0>
 602:	00 c0       	rjmp	.+0      	; 0x604 <main+0x1ca>
 604:	00 00       	nop
	_delay_ms(300);
	rgb_set(0, CYAN);
 606:	69 e0       	ldi	r22, 0x09	; 9
 608:	71 e0       	ldi	r23, 0x01	; 1
 60a:	80 e0       	ldi	r24, 0x00	; 0
 60c:	90 e0       	ldi	r25, 0x00	; 0
 60e:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <rgb_set>
	rgb_set(1, MAGENTA);
 612:	66 e0       	ldi	r22, 0x06	; 6
 614:	71 e0       	ldi	r23, 0x01	; 1
 616:	ce 01       	movw	r24, r28
 618:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <rgb_set>
 61c:	4f e7       	ldi	r20, 0x7F	; 127
 61e:	5f e4       	ldi	r21, 0x4F	; 79
 620:	62 e1       	ldi	r22, 0x12	; 18
 622:	41 50       	subi	r20, 0x01	; 1
 624:	50 40       	sbci	r21, 0x00	; 0
 626:	60 40       	sbci	r22, 0x00	; 0
 628:	e1 f7       	brne	.-8      	; 0x622 <main+0x1e8>
 62a:	00 c0       	rjmp	.+0      	; 0x62c <main+0x1f2>
 62c:	00 00       	nop
	_delay_ms(300);
	rgb_set(0, RED);
 62e:	65 e1       	ldi	r22, 0x15	; 21
 630:	71 e0       	ldi	r23, 0x01	; 1
 632:	80 e0       	ldi	r24, 0x00	; 0
 634:	90 e0       	ldi	r25, 0x00	; 0
 636:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <rgb_set>
	rgb_set(1, GREEN);
 63a:	6f e0       	ldi	r22, 0x0F	; 15
 63c:	71 e0       	ldi	r23, 0x01	; 1
 63e:	ce 01       	movw	r24, r28
 640:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <rgb_set>
 644:	8f e7       	ldi	r24, 0x7F	; 127
 646:	9f e4       	ldi	r25, 0x4F	; 79
 648:	22 e1       	ldi	r18, 0x12	; 18
 64a:	81 50       	subi	r24, 0x01	; 1
 64c:	90 40       	sbci	r25, 0x00	; 0
 64e:	20 40       	sbci	r18, 0x00	; 0
 650:	e1 f7       	brne	.-8      	; 0x64a <main+0x210>
 652:	00 c0       	rjmp	.+0      	; 0x654 <main+0x21a>
 654:	00 00       	nop
	_delay_ms(300);
	rgb_set(0, ORANGE);
 656:	62 e1       	ldi	r22, 0x12	; 18
 658:	71 e0       	ldi	r23, 0x01	; 1
 65a:	80 e0       	ldi	r24, 0x00	; 0
 65c:	90 e0       	ldi	r25, 0x00	; 0
 65e:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <rgb_set>
	rgb_set(1, VIOLET);
 662:	6c e0       	ldi	r22, 0x0C	; 12
 664:	71 e0       	ldi	r23, 0x01	; 1
 666:	ce 01       	movw	r24, r28
 668:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <rgb_set>
 66c:	4f e7       	ldi	r20, 0x7F	; 127
 66e:	5f e4       	ldi	r21, 0x4F	; 79
 670:	62 e1       	ldi	r22, 0x12	; 18
 672:	41 50       	subi	r20, 0x01	; 1
 674:	50 40       	sbci	r21, 0x00	; 0
 676:	60 40       	sbci	r22, 0x00	; 0
 678:	e1 f7       	brne	.-8      	; 0x672 <main+0x238>
 67a:	00 c0       	rjmp	.+0      	; 0x67c <main+0x242>
 67c:	00 00       	nop
	_delay_ms(300);
	rgb_set(0, VIOLET);
 67e:	6c e0       	ldi	r22, 0x0C	; 12
 680:	71 e0       	ldi	r23, 0x01	; 1
 682:	80 e0       	ldi	r24, 0x00	; 0
 684:	90 e0       	ldi	r25, 0x00	; 0
 686:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <rgb_set>
	rgb_set(1, WHITE);
 68a:	63 e0       	ldi	r22, 0x03	; 3
 68c:	71 e0       	ldi	r23, 0x01	; 1
 68e:	ce 01       	movw	r24, r28
 690:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <rgb_set>
 694:	8f e7       	ldi	r24, 0x7F	; 127
 696:	9f e4       	ldi	r25, 0x4F	; 79
 698:	22 e1       	ldi	r18, 0x12	; 18
 69a:	81 50       	subi	r24, 0x01	; 1
 69c:	90 40       	sbci	r25, 0x00	; 0
 69e:	20 40       	sbci	r18, 0x00	; 0
 6a0:	e1 f7       	brne	.-8      	; 0x69a <main+0x260>
 6a2:	00 c0       	rjmp	.+0      	; 0x6a4 <main+0x26a>
 6a4:	00 00       	nop
	_delay_ms(300);
	rgb_set(0, BLACK);
 6a6:	68 e2       	ldi	r22, 0x28	; 40
 6a8:	71 e0       	ldi	r23, 0x01	; 1
 6aa:	80 e0       	ldi	r24, 0x00	; 0
 6ac:	90 e0       	ldi	r25, 0x00	; 0
 6ae:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <rgb_set>
	rgb_set(1, ORANGE);
 6b2:	62 e1       	ldi	r22, 0x12	; 18
 6b4:	71 e0       	ldi	r23, 0x01	; 1
 6b6:	ce 01       	movw	r24, r28
 6b8:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <rgb_set>
 6bc:	4f e7       	ldi	r20, 0x7F	; 127
 6be:	5f e4       	ldi	r21, 0x4F	; 79
 6c0:	62 e1       	ldi	r22, 0x12	; 18
 6c2:	41 50       	subi	r20, 0x01	; 1
 6c4:	50 40       	sbci	r21, 0x00	; 0
 6c6:	60 40       	sbci	r22, 0x00	; 0
 6c8:	e1 f7       	brne	.-8      	; 0x6c2 <main+0x288>
 6ca:	00 c0       	rjmp	.+0      	; 0x6cc <main+0x292>
 6cc:	00 00       	nop
{
	//1 = off; 0 = on
	switch (LED_ID)
	{
		case LED1:
		LED1Flag = status;
 6ce:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <LED1Flag+0x1>
 6d2:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <LED1Flag>
		break;
		
		case LED2:
		LED2Flag = status;
 6d6:	d0 93 2e 01 	sts	0x012E, r29	; 0x80012e <LED2Flag+0x1>
 6da:	c0 93 2d 01 	sts	0x012D, r28	; 0x80012d <LED2Flag>
 6de:	8f e7       	ldi	r24, 0x7F	; 127
 6e0:	9f e4       	ldi	r25, 0x4F	; 79
 6e2:	22 e1       	ldi	r18, 0x12	; 18
 6e4:	81 50       	subi	r24, 0x01	; 1
 6e6:	90 40       	sbci	r25, 0x00	; 0
 6e8:	20 40       	sbci	r18, 0x00	; 0
 6ea:	e1 f7       	brne	.-8      	; 0x6e4 <main+0x2aa>
 6ec:	00 c0       	rjmp	.+0      	; 0x6ee <main+0x2b4>
 6ee:	00 00       	nop
{
	//1 = off; 0 = on
	switch (LED_ID)
	{
		case LED1:
		LED1Flag = status;
 6f0:	d0 93 30 01 	sts	0x0130, r29	; 0x800130 <LED1Flag+0x1>
 6f4:	c0 93 2f 01 	sts	0x012F, r28	; 0x80012f <LED1Flag>
		break;
		
		case LED2:
		LED2Flag = status;
 6f8:	d0 93 2e 01 	sts	0x012E, r29	; 0x80012e <LED2Flag+0x1>
 6fc:	c0 93 2d 01 	sts	0x012D, r28	; 0x80012d <LED2Flag>
	indicatorSet(LED1, 0);
	indicatorSet(LED2, 1); //TURN OFF BLUE LED #1 NOTE THAT 1 = OFF. 0 = ON
	_delay_ms(300);
	indicatorSet(LED1, 1);
	indicatorSet(LED2, 1);
	rgb_set(0, BLACK);
 700:	68 e2       	ldi	r22, 0x28	; 40
 702:	71 e0       	ldi	r23, 0x01	; 1
 704:	80 e0       	ldi	r24, 0x00	; 0
 706:	90 e0       	ldi	r25, 0x00	; 0
 708:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <rgb_set>
	rgb_set(1, BLACK);
 70c:	68 e2       	ldi	r22, 0x28	; 40
 70e:	71 e0       	ldi	r23, 0x01	; 1
 710:	ce 01       	movw	r24, r28
 712:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <rgb_set>
 716:	4f e7       	ldi	r20, 0x7F	; 127
 718:	5f e4       	ldi	r21, 0x4F	; 79
 71a:	62 e1       	ldi	r22, 0x12	; 18
 71c:	41 50       	subi	r20, 0x01	; 1
 71e:	50 40       	sbci	r21, 0x00	; 0
 720:	60 40       	sbci	r22, 0x00	; 0
 722:	e1 f7       	brne	.-8      	; 0x71c <main+0x2e2>
 724:	00 c0       	rjmp	.+0      	; 0x726 <main+0x2ec>
 726:	00 00       	nop
 728:	93 ce       	rjmp	.-730    	; 0x450 <main+0x16>

0000072a <_exit>:
 72a:	f8 94       	cli

0000072c <__stop_program>:
 72c:	ff cf       	rjmp	.-2      	; 0x72c <__stop_program>
